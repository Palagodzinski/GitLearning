// <auto-generated />
using System;
using Application.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Application.Api.Migrations
{
    [DbContext(typeof(DBaseContext))]
    [Migration("20220426072522_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Application.Core.Models.Books", b =>
                {
                    b.Property<int>("Bks_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bks_ID"), 1L, 1);

                    b.Property<string>("Bks_Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bks_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("Usr_UsrID")
                        .HasColumnType("int");

                    b.HasKey("Bks_ID");

                    b.HasIndex("UserID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Application.Core.Models.DelayedBooks", b =>
                {
                    b.Property<int>("Db_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Db_Id"), 1L, 1);

                    b.Property<int>("BookBks_ID")
                        .HasColumnType("int");

                    b.Property<int>("Db_DelayDaysCount")
                        .HasColumnType("int");

                    b.Property<int>("UserUsr_ID")
                        .HasColumnType("int");

                    b.HasKey("Db_Id");

                    b.HasIndex("BookBks_ID");

                    b.HasIndex("UserUsr_ID");

                    b.ToTable("DelayedBooks");
                });

            modelBuilder.Entity("Application.Core.Models.UserModel", b =>
                {
                    b.Property<int>("Usr_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Usr_ID"), 1L, 1);

                    b.Property<DateTime>("Usr_Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Usr_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usr_LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usr_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usr_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Usr_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Application.Core.Models.Books", b =>
                {
                    b.HasOne("Application.Core.Models.UserModel", "User")
                        .WithMany("Books")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Application.Core.Models.DelayedBooks", b =>
                {
                    b.HasOne("Application.Core.Models.Books", "Book")
                        .WithMany()
                        .HasForeignKey("BookBks_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Application.Core.Models.UserModel", "User")
                        .WithMany("DelayedBooks")
                        .HasForeignKey("UserUsr_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Application.Core.Models.UserModel", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("DelayedBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
